{"ast":null,"code":"var _jsxFileName = \"/home/evazs/Documents/Projects/BrainStrom-Admin/src/pages/BookGoogleEvent.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\nimport { Container, Grid, Typography, Button, Stack, Icon } from '@mui/material';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { Link } from 'react-router-dom';\n/* global gapi */\n// prettier-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookGoogleEvent() {\n  _s();\n\n  let month = '01';\n  let auth2;\n  const [value, setValue] = React.useState('');\n  const [showTime, setShowTime] = React.useState(false);\n  const [view, setView] = React.useState('');\n  const [time, setTime] = React.useState(0);\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n    setTime(parseInt(nextView, 10));\n  };\n\n  const [finalDate, setFinalDate] = React.useState('');\n  const [endDate, setEndFinalDate] = React.useState('');\n\n  const dateConverter = () => {\n    const cDate = value.toString();\n    const myDate = cDate.split(' ');\n\n    if (myDate[1] === 'Jan') {\n      month = '01';\n    }\n\n    if (myDate[1] === 'Feb') {\n      month = '02';\n    }\n\n    if (myDate[1] === 'Mar') {\n      month = '03';\n    }\n\n    if (myDate[1] === 'April') {\n      month = '04';\n    }\n\n    if (myDate[1] === 'May') {\n      month = '05';\n    }\n\n    if (myDate[1] === 'Jun') {\n      month = '06';\n    }\n\n    if (myDate[1] === 'Jul') {\n      month = '07';\n    }\n\n    if (myDate[1] === 'Aug') {\n      month = '08';\n    }\n\n    if (myDate[1] === 'Sep') {\n      month = '09';\n    }\n\n    if (myDate[1] === 'Oct') {\n      month = '10';\n    }\n\n    if (myDate[1] === 'Nov') {\n      month = '11';\n    }\n\n    if (myDate[1] === 'Dec') {\n      month = '12';\n    }\n\n    const theDate = `${myDate[3]}-${month}-${myDate[2]}T${time}:00:00+05:45`;\n    const endingDate = `${myDate[3]}-${month}-${myDate[2]}T${time + 1}:00:00+05:45`;\n    setFinalDate(theDate);\n    setEndFinalDate(endingDate);\n    return {\n      'start': theDate,\n      'final': endingDate\n    };\n  };\n\n  const CLIENT_ID = '927832324416-9t64nstt3omba55i2rh1ds5lc2r3ba9m.apps.googleusercontent.com';\n  const API_KEY = 'AIzaSyAyrE8iaEIFNlVsqsLvwRKFeiPf1Yh7tFU';\n  const DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\n  const SCOPES = 'https://www.googleapis.com/auth/calendar';\n\n  const bookevent = () => {\n    const dates = dateConverter();\n    gapi.load('client:auth2', () => {\n      auth2 = gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', () => console.log('DONE'));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        const user = gapi.client;\n        console.log(user);\n        const event = {\n          \"summary\": \"Brainstorm Consulation\",\n          \"description\": \"A chance to hear more about our services\",\n          \"start\": {\n            \"dateTime\": dates.start\n          },\n          \"end\": {\n            \"dateTime\": dates.final\n          },\n          \"sendNotifications\": true,\n          \"attendees\": [{\n            \"email\": `aa`\n          }, {\n            \"email\": \"mailtokanchanbhatta@gmail.com\"\n          }]\n        };\n        const request = gapi.client.calendar.events.insert({\n          calendarId: 'primary',\n          resource: event\n        });\n        console.log(event);\n        request.execute(event => {\n          window.open(event.htmlLink);\n        });\n      });\n    });\n  };\n\n  const clearEvent = () => {\n    setTime(0);\n    setValue(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: time !== 0 ? /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        mt: 15,\n        mb: 2,\n        variant: \"h6\",\n        children: \"You choose to Book your meet on\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        mb: 5,\n        children: [value.toString().slice(4, 15), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \" from \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 40\n        }, this), \" \", time, \":00  \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \" to \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 65\n        }, this), \" \", time + 1, \":00\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        mb: 5,\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: bookevent,\n          icon: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"add\",\n            size: 15,\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 19\n          }, this),\n          children: \"Yes, I Confirm!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"warning\",\n          onClick: clearEvent,\n          icon: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"add\",\n            size: 15,\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this),\n          children: \"Cancel, I will retry!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      mb: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n          dateAdapter: AdapterDateFns,\n          children: /*#__PURE__*/_jsxDEV(StaticDatePicker, {\n            disablePast: true,\n            orientation: \"landscape\",\n            openTo: \"day\",\n            value: value,\n            onChange: newValue => {\n              setValue(newValue);\n              setShowTime(true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), showTime ? /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 2,\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          orientation: \"vertical\",\n          value: view,\n          color: \"primary\",\n          size: \"large\",\n          exclusive: true,\n          fullWidth: true,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"10\",\n            children: \"10 AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"11\",\n            children: \"11 AM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"12\",\n            children: \"12 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"13\",\n            children: \"1 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"14\",\n            children: \"2 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"15\",\n            children: \"3 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"16\",\n            children: \"4 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"17\",\n            children: \"5 PM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookGoogleEvent, \"AZUICCOoHGc0xr9ym/80DNIrkrM=\");\n\n_c = BookGoogleEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookGoogleEvent\");","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom-Admin/src/pages/BookGoogleEvent.js"],"names":["React","AdapterDateFns","LocalizationProvider","StaticDatePicker","Container","Grid","Typography","Button","Stack","Icon","ToggleButton","ToggleButtonGroup","Link","BookGoogleEvent","month","auth2","value","setValue","useState","showTime","setShowTime","view","setView","time","setTime","handleChange","event","nextView","parseInt","finalDate","setFinalDate","endDate","setEndFinalDate","dateConverter","cDate","toString","myDate","split","theDate","endingDate","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","bookevent","dates","gapi","load","client","init","apiKey","clientId","discoveryDocs","scope","console","log","getAuthInstance","signIn","then","user","start","final","request","calendar","events","insert","calendarId","resource","execute","window","open","htmlLink","clearEvent","slice","newValue"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\nimport { Container, Grid, Typography, Button, Stack, Icon } from '@mui/material';\n\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { Link } from 'react-router-dom';\n\n/* global gapi */\n// prettier-ignore\n\nexport default function BookGoogleEvent() {\n  let month = '01';\n  let auth2;\n\n  const [value, setValue] = React.useState('');\n  const [showTime, setShowTime] = React.useState(false);\n\n  const [view, setView] = React.useState('');\n  const [time, setTime] = React.useState(0);\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n    setTime(parseInt(nextView, 10));\n  };\n\n  const [finalDate, setFinalDate] = React.useState('');\n  const [endDate, setEndFinalDate] = React.useState('');\n\n  const dateConverter = () => {\n    const cDate = value.toString();\n    const myDate = cDate.split(' ');\n    if (myDate[1] === 'Jan') {\n      month = '01';\n    }\n    if (myDate[1] === 'Feb') {\n      month = '02';\n    }\n    if (myDate[1] === 'Mar') {\n      month = '03';\n    }\n    if (myDate[1] === 'April') {\n      month = '04';\n    }\n    if (myDate[1] === 'May') {\n      month = '05';\n    }\n    if (myDate[1] === 'Jun') {\n      month = '06';\n    }\n    if (myDate[1] === 'Jul') {\n      month = '07';\n    }\n    if (myDate[1] === 'Aug') {\n      month = '08';\n    }\n    if (myDate[1] === 'Sep') {\n      month = '09';\n    }\n    if (myDate[1] === 'Oct') {\n      month = '10';\n    }\n    if (myDate[1] === 'Nov') {\n      month = '11';\n    }\n    if (myDate[1] === 'Dec') {\n      month = '12';\n    }\n\n    const theDate = `${myDate[3]}-${month}-${myDate[2]}T${time}:00:00+05:45`;\n    const endingDate = `${myDate[3]}-${month}-${myDate[2]}T${time+1}:00:00+05:45`;\n    setFinalDate(theDate);\n    setEndFinalDate(endingDate);\n    return {'start':theDate, 'final':endingDate};\n  };\n\n  const CLIENT_ID = '927832324416-9t64nstt3omba55i2rh1ds5lc2r3ba9m.apps.googleusercontent.com';\n  const API_KEY = 'AIzaSyAyrE8iaEIFNlVsqsLvwRKFeiPf1Yh7tFU';\n  const DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\n  const SCOPES = 'https://www.googleapis.com/auth/calendar';\n\n  const bookevent = () => {\n    const dates = dateConverter();\n\n    gapi.load('client:auth2', () => {\n      auth2 = gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n\n      gapi.client.load('calendar', 'v3', () => console.log('DONE'));\n\n      gapi.auth2\n        .getAuthInstance()\n        .signIn()\n        .then(() => {\n\n          const user = gapi.client;\n\n          console.log(user);\n          \n          const event = {\n            \"summary\": \"Brainstorm Consulation\",\n            \"description\": \"A chance to hear more about our services\",\n            \"start\": {\n              \"dateTime\": dates.start,\n            },\n            \"end\": {\n              \"dateTime\": dates.final,\n            },\n            \"sendNotifications\": true,\n            \"attendees\": [\n              { \"email\":  `aa`},\n              { \"email\": \"mailtokanchanbhatta@gmail.com\" }\n            ]\n          };\n\n          const request = gapi.client.calendar.events.insert({\n            calendarId: 'primary',\n            resource: event\n          });\n\n          console.log(event);\n\n          request.execute((event) => {\n            window.open(event.htmlLink);\n          });\n        });\n    });\n  };\n\n  const clearEvent = () => {\n\n    setTime(0);\n    setValue(0);\n\n  };\n\n  return (\n    <Container>\n    {time !== 0?(\n      <Container>\n        <Typography mt={15} mb={2} variant=\"h6\">\n          You choose to Book your meet on\n        </Typography>\n        <Typography variant=\"h4\" mb={5}>\n        {value.toString().slice(4,15)} <i> from </i> {time}:00  <i> to </i> {time+1}:00\n        </Typography>\n        <Stack direction=\"row\" mb={5} spacing={4}>\n          <Button\n            variant=\"contained\"\n            onClick={bookevent}\n            icon={<Icon name=\"add\" size={15} color=\"white\" />}\n          >\n            Yes, I Confirm!\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"warning\"\n            onClick={clearEvent}\n            icon={<Icon name=\"add\" size={15} color=\"white\" />}\n          >\n            Cancel, I will retry!\n          </Button>\n        </Stack>\n      </Container>\n    ):(\n      <Grid container spacing={2} mb={3}>\n        <Grid item xs={9}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              disablePast\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              onChange={(newValue) => {\n                setValue(newValue);\n                setShowTime(true);\n              }}\n            />\n          </LocalizationProvider>\n        </Grid>\n        {showTime ? (\n          <Grid item xs={2} mt={2}>\n            <ToggleButtonGroup\n              orientation=\"vertical\"\n              value={view}\n              color=\"primary\"\n              size=\"large\"\n              exclusive\n              fullWidth\n              onChange={handleChange}\n            >\n              <ToggleButton value=\"10\">10 AM</ToggleButton>\n              <ToggleButton value=\"11\">11 AM</ToggleButton>\n              <ToggleButton value=\"12\">12 PM</ToggleButton>\n              <ToggleButton value=\"13\">1 PM</ToggleButton>\n              <ToggleButton value=\"14\">2 PM</ToggleButton>\n              <ToggleButton value=\"15\">3 PM</ToggleButton>\n              <ToggleButton value=\"16\">4 PM</ToggleButton>\n              <ToggleButton value=\"17\">5 PM</ToggleButton>\n            </ToggleButtonGroup>\n          </Grid>\n        ) : (\n          <Container />\n        )}\n      </Grid>\n    \n    )}\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}