{"ast":null,"code":"var _jsxFileName = \"/home/evazs/Documents/Projects/BrainStrom/ui/admin/src/pages/Media.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles'; // material\n\nimport { Container, Stack, Typography, Button, Icon, Card, Link, Grid } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport * as React from 'react';\nimport Box from '@mui/material/Box'; // components\n\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport Page from '../components/Page';\nimport { ProductSort, ProductList, ProductFilterSidebar } from '../components/_dashboard/products'; //\n\nimport { getAllMedia } from '../_mocks_/repo/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '50px',\n  objectFit: 'cover',\n  position: 'absolute'\n});\nexport default function Media() {\n  _s();\n\n  const [openFilter, setOpenFilter] = useState(false);\n  const [visaservices, setVisaServices] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n\n  const handleClose = () => setOpen(false);\n\n  const init = () => {\n    getAllMedia().then(data => {\n      console.log(data.data);\n      setVisaServices(data.data);\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  const MIGRATIONSERVICELIST = visaservices.map((_, index) => {\n    const setIndex = index + 1;\n    return {\n      id: visaservices[index].id,\n      image: visaservices[index].image,\n      name: visaservices[index].name\n    };\n  });\n\n  const handleFilterByName = event => {\n    setFilterName(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Dashboard: Products | Minimal-UI\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Available Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: \"/dashboard/media/add\",\n          icon: /*#__PURE__*/_jsxDEV(Icon, {\n            name: \"add\",\n            size: 15,\n            color: \"white\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 19\n          }, this),\n          children: \"Add Media\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: MIGRATIONSERVICELIST.map(service => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(ImageCard, {\n            images: service\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)\n        }, service.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Media, \"4JL4Bqc8MjgxAtGIL5E1pWkVWN4=\");\n\n_c = Media;\nImageCard.propTypes = {\n  images: PropTypes.object.isRequired\n};\n\nfunction ImageCard({\n  images\n}) {\n  const {\n    id,\n    name,\n    image\n  } = images;\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        pt: '100%',\n        position: 'relative'\n      },\n      children: /*#__PURE__*/_jsxDEV(ProductImgStyle, {\n        alt: name,\n        src: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      sx: {\n        p: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"#\",\n        color: \"inherit\",\n        underline: \"hover\",\n        component: RouterLink,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle2\",\n          noWrap: true,\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = ImageCard;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Media\");\n$RefreshReg$(_c2, \"ImageCard\");","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom/ui/admin/src/pages/Media.js"],"names":["PropTypes","useFormik","Link","RouterLink","useState","useEffect","styled","Container","Stack","Typography","Button","Icon","Card","Grid","Modal","React","Box","plusFill","Page","ProductSort","ProductList","ProductFilterSidebar","getAllMedia","ProductImgStyle","top","width","height","objectFit","position","Media","openFilter","setOpenFilter","visaservices","setVisaServices","filterName","setFilterName","open","setOpen","handleOpen","handleClose","init","then","data","console","log","MIGRATIONSERVICELIST","map","_","index","setIndex","id","image","name","handleFilterByName","event","target","value","service","ImageCard","propTypes","images","object","isRequired","pt","p"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useFormik } from 'formik';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\n\n// material\nimport { Container, Stack, Typography, Button, Icon, Card, Link, Grid } from '@mui/material';\nimport Modal from '@mui/material/Modal';\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\n// components\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport Page from '../components/Page';\nimport { ProductSort, ProductList, ProductFilterSidebar } from '../components/_dashboard/products';\n//\nimport { getAllMedia } from '../_mocks_/repo/data';\n\nconst ProductImgStyle = styled('img')({\n  top: 0,\n  width: '100%',\n  height: '50px',\n  objectFit: 'cover',\n  position: 'absolute'\n});\n\nexport default function Media() {\n  const [openFilter, setOpenFilter] = useState(false);\n  const [visaservices, setVisaServices] = useState([]);\n  const [filterName, setFilterName] = useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  const init = () => {\n    getAllMedia().then((data) => {\n      console.log(data.data);\n      setVisaServices(data.data);\n    });\n  };\n  useEffect(() => {\n    init();\n  }, []);\n\n  const MIGRATIONSERVICELIST = visaservices.map((_, index) => {\n    const setIndex = index + 1;\n    return {\n      id: visaservices[index].id,\n      image: visaservices[index].image,\n      name: visaservices[index].name\n    };\n  });\n\n  const handleFilterByName = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  return (\n    <Page title=\"Dashboard: Products | Minimal-UI\">\n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Available Media\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"/dashboard/media/add\"\n            icon={<Icon name=\"add\" size={15} color=\"white\" />}\n          >\n            Add Media\n          </Button>\n        </Stack>\n        <Grid container spacing={1}>\n          {MIGRATIONSERVICELIST.map((service) => (\n            <Grid item key={service.id}>\n              <ImageCard images={service} />\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n\nImageCard.propTypes = {\n  images: PropTypes.object.isRequired\n};\n\nfunction ImageCard({ images }) {\n  const { id, name, image } = images;\n  return (\n    <Card>\n      <Box sx={{ pt: '100%', position: 'relative' }}>\n        <ProductImgStyle alt={name} src={image} />\n      </Box>\n\n      <Stack spacing={2} sx={{ p: 3 }}>\n        <Link to=\"#\" color=\"inherit\" underline=\"hover\" component={RouterLink}>\n          <Typography variant=\"subtitle2\" noWrap>\n            {name}\n          </Typography>\n        </Link>\n      </Stack>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}