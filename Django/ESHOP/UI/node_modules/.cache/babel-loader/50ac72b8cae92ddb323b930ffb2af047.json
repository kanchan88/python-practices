{"ast":null,"code":"import faker from 'faker';\nimport { sample } from 'lodash'; // utils\n\nimport { mockImgProduct } from '../utils/mockImages'; // ----------------------------------------------------------------------\n\nexport const getAllProducts = async () => {\n  try {\n    console.log(await axios.get(\"http://127.0.0.1:8000/api/product\"));\n    return await axios.get(\"http://127.0.0.1:8000/api/product\");\n  } catch (error) {\n    console.log(error);\n  }\n};\nconst [product, setProducts] = useState([]);\nAllProductsData().then(data => {\n  setProducts(data.data);\n}); // ----------------------------------------------------------------------\n\nconst products = product.map((_, index) => {\n  const setIndex = index + 1;\n  return {\n    id: product.id,\n    cover: product.images[0].image,\n    name: product.name,\n    price: product.price,\n    priceSale: setIndex % 3 ? null : faker.datatype.number({\n      min: 19,\n      max: 29,\n      precision: 0.01\n    }),\n    colors: setIndex === 1 && PRODUCT_COLOR.slice(0, 2) || setIndex === 2 && PRODUCT_COLOR.slice(1, 3) || setIndex === 3 && PRODUCT_COLOR.slice(2, 4) || setIndex === 4 && PRODUCT_COLOR.slice(3, 6) || setIndex === 23 && PRODUCT_COLOR.slice(4, 6) || setIndex === 24 && PRODUCT_COLOR.slice(5, 6) || PRODUCT_COLOR,\n    status: sample(['sale', 'new', '', ''])\n  };\n});\nexport default products;","map":{"version":3,"sources":["/home/evazs/Downloads/material-kit-react-main/src/_mocks_/products.js"],"names":["faker","sample","mockImgProduct","getAllProducts","console","log","axios","get","error","product","setProducts","useState","AllProductsData","then","data","products","map","_","index","setIndex","id","cover","images","image","name","price","priceSale","datatype","number","min","max","precision","colors","PRODUCT_COLOR","slice","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,QAAvB,C,CACA;;AACA,SAASC,cAAT,QAA+B,qBAA/B,C,CAEA;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACxC,MAAI;AACFC,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAMC,KAAK,CAACC,GAAN,CAAU,mCAAV,CAAlB;AACA,WAAO,MAAMD,KAAK,CAACC,GAAN,CAAU,mCAAV,CAAb;AACD,GAHD,CAGE,OAAOC,KAAP,EAAc;AACdJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD;AACF,CAPM;AASP,MAAM,CAACC,OAAD,EAAUC,WAAV,IAAyBC,QAAQ,CAAC,EAAD,CAAvC;AAEAC,eAAe,GAAGC,IAAlB,CAAwBC,IAAD,IAAU;AAC/BJ,EAAAA,WAAW,CAACI,IAAI,CAACA,IAAN,CAAX;AACD,CAFD,E,CAIA;;AAEA,MAAMC,QAAQ,GAAGN,OAAO,CAACO,GAAR,CAAY,CAACC,CAAD,EAAIC,KAAJ,KAAc;AACzC,QAAMC,QAAQ,GAAGD,KAAK,GAAG,CAAzB;AAEA,SAAO;AACLE,IAAAA,EAAE,EAAEX,OAAO,CAACW,EADP;AAELC,IAAAA,KAAK,EAAEZ,OAAO,CAACa,MAAR,CAAe,CAAf,EAAkBC,KAFpB;AAGLC,IAAAA,IAAI,EAAEf,OAAO,CAACe,IAHT;AAILC,IAAAA,KAAK,EAAEhB,OAAO,CAACgB,KAJV;AAKLC,IAAAA,SAAS,EAAEP,QAAQ,GAAG,CAAX,GAAe,IAAf,GAAsBnB,KAAK,CAAC2B,QAAN,CAAeC,MAAf,CAAsB;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,GAAG,EAAE,EAAhB;AAAoBC,MAAAA,SAAS,EAAE;AAA/B,KAAtB,CAL5B;AAMLC,IAAAA,MAAM,EACHb,QAAQ,KAAK,CAAb,IAAkBc,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAAnB,IACCf,QAAQ,KAAK,CAAb,IAAkBc,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CADnB,IAECf,QAAQ,KAAK,CAAb,IAAkBc,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAFnB,IAGCf,QAAQ,KAAK,CAAb,IAAkBc,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAHnB,IAICf,QAAQ,KAAK,EAAb,IAAmBc,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CAJpB,IAKCf,QAAQ,KAAK,EAAb,IAAmBc,aAAa,CAACC,KAAd,CAAoB,CAApB,EAAuB,CAAvB,CALpB,IAMAD,aAbG;AAcLE,IAAAA,MAAM,EAAElC,MAAM,CAAC,CAAC,MAAD,EAAS,KAAT,EAAgB,EAAhB,EAAoB,EAApB,CAAD;AAdT,GAAP;AAgBD,CAnBgB,CAAjB;AAqBA,eAAec,QAAf","sourcesContent":["import faker from 'faker';\nimport { sample } from 'lodash';\n// utils\nimport { mockImgProduct } from '../utils/mockImages';\n\n// ----------------------------------------------------------------------\nexport const getAllProducts = async () => {\n  try {\n    console.log(await axios.get(\"http://127.0.0.1:8000/api/product\"));\n    return await axios.get(\"http://127.0.0.1:8000/api/product\");\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst [product, setProducts] = useState([]);\n\nAllProductsData().then((data) => {\n  setProducts(data.data);\n});\n\n// ----------------------------------------------------------------------\n\nconst products = product.map((_, index) => {\n  const setIndex = index + 1;\n\n  return {\n    id: product.id,\n    cover: product.images[0].image,\n    name: product.name,\n    price: product.price,\n    priceSale: setIndex % 3 ? null : faker.datatype.number({ min: 19, max: 29, precision: 0.01 }),\n    colors:\n      (setIndex === 1 && PRODUCT_COLOR.slice(0, 2)) ||\n      (setIndex === 2 && PRODUCT_COLOR.slice(1, 3)) ||\n      (setIndex === 3 && PRODUCT_COLOR.slice(2, 4)) ||\n      (setIndex === 4 && PRODUCT_COLOR.slice(3, 6)) ||\n      (setIndex === 23 && PRODUCT_COLOR.slice(4, 6)) ||\n      (setIndex === 24 && PRODUCT_COLOR.slice(5, 6)) ||\n      PRODUCT_COLOR,\n    status: sample(['sale', 'new', '', ''])\n  };\n});\n\nexport default products;\n"]},"metadata":{},"sourceType":"module"}