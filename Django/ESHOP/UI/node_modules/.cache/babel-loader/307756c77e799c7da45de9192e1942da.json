{"ast":null,"code":"var _jsxFileName = \"/home/evazs/Documents/Projects/BrainStrom/ui/admin/src/pages/Team.js\",\n    _s = $RefreshSig$();\n\nimport { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom'; // material\n\nimport { Card, Table, Stack, Avatar, Button, Checkbox, TableRow, TableBody, TableCell, Container, Typography, TableContainer, TablePagination, imageListItemClasses } from '@mui/material'; // components\n\nimport Page from '../components/Page';\nimport Label from '../components/Label';\nimport Scrollbar from '../components/Scrollbar';\nimport SearchNotFound from '../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../components/_dashboard/user';\nimport { getAllTeamMember } from '../_mocks_/repo/data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TABLE_HEAD = [{\n  id: 'name',\n  label: 'Name',\n  alignRight: false\n}, {\n  id: 'description',\n  label: 'Position',\n  alignRight: false\n}]; // ----------------------------------------------------------------------\n\nexport default function Team() {\n  _s();\n\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [categories, setCategoy] = useState([]);\n\n  const init = () => {\n    getAllTeamMember().then(data => {\n      console.log(data.data);\n      setCategoy(data.data);\n    });\n  };\n\n  useEffect(() => {\n    init();\n  }, []);\n  const CATEGORYLIST = categories.map((_, index) => ({\n    id: categories[index].id,\n    name: categories[index].name,\n    position: categories[index].position,\n    image: categories[index].image\n  }));\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - CATEGORYLIST.length) : 0;\n  const filteredUsers = applySortFilter(CATEGORYLIST, getComparator(order, orderBy), filterName);\n  const isUserNotFound = filteredUsers.length === 0;\n  return /*#__PURE__*/_jsxDEV(Page, {\n    title: \"Team | BrainStrom\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        alignItems: \"center\",\n        justifyContent: \"space-between\",\n        mb: 5,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          gutterBottom: true,\n          children: \"Team Member\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: RouterLink,\n          to: \"#\",\n          startIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            icon: plusFill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 24\n          }, this),\n          children: \"Add Team\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(Scrollbar, {\n          children: /*#__PURE__*/_jsxDEV(TableContainer, {\n            sx: {\n              minWidth: 800\n            },\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(UserListHead, {\n                order: order,\n                orderBy: orderBy,\n                headLabel: TABLE_HEAD,\n                rowCount: CATEGORYLIST.length,\n                numSelected: selected.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: [filteredUsers.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                  const {\n                    id,\n                    name,\n                    position,\n                    image\n                  } = row;\n                  const isItemSelected = selected.indexOf(name) !== -1;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    tabIndex: -1,\n                    role: \"checkbox\",\n                    selected: isItemSelected,\n                    \"aria-checked\": isItemSelected,\n                    component: RouterLink,\n                    to: `/dashboard/edit-category/${id}`,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      padding: \"none\",\n                      children: /*#__PURE__*/_jsxDEV(Stack, {\n                        direction: \"row\",\n                        alignItems: \"center\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n                          alt: name,\n                          src: image\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"subtitle2\",\n                          noWrap: true,\n                          children: name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 121,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"left\",\n                      children: position\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 27\n                    }, this)]\n                  }, id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 25\n                  }, this);\n                }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                  style: {\n                    height: 53 * emptyRows\n                  },\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 131,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), isUserNotFound && /*#__PURE__*/_jsxDEV(TableBody, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    colSpan: 6,\n                    sx: {\n                      py: 3\n                    },\n                    children: /*#__PURE__*/_jsxDEV(SearchNotFound, {\n                      searchQuery: filterName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Team, \"DKuA5tPlTtRrnST4kvyO4Eb3PCM=\");\n\n_c = Team;\n\nvar _c;\n\n$RefreshReg$(_c, \"Team\");","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom/ui/admin/src/pages/Team.js"],"names":["filter","Icon","sentenceCase","useState","useEffect","plusFill","Link","RouterLink","Card","Table","Stack","Avatar","Button","Checkbox","TableRow","TableBody","TableCell","Container","Typography","TableContainer","TablePagination","imageListItemClasses","Page","Label","Scrollbar","SearchNotFound","UserListHead","UserListToolbar","UserMoreMenu","getAllTeamMember","TABLE_HEAD","id","label","alignRight","Team","page","setPage","order","setOrder","selected","setSelected","orderBy","setOrderBy","filterName","setFilterName","rowsPerPage","setRowsPerPage","categories","setCategoy","init","then","data","console","log","CATEGORYLIST","map","_","index","name","position","image","emptyRows","Math","max","length","filteredUsers","applySortFilter","getComparator","isUserNotFound","minWidth","slice","row","isItemSelected","indexOf","height","py"],"mappings":"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","sourcesContent":["import { filter } from 'lodash';\nimport { Icon } from '@iconify/react';\nimport { sentenceCase } from 'change-case';\nimport { useState, useEffect } from 'react';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Link as RouterLink } from 'react-router-dom';\n// material\nimport {\n  Card,\n  Table,\n  Stack,\n  Avatar,\n  Button,\n  Checkbox,\n  TableRow,\n  TableBody,\n  TableCell,\n  Container,\n  Typography,\n  TableContainer,\n  TablePagination,\n  imageListItemClasses\n} from '@mui/material';\n// components\nimport Page from '../components/Page';\nimport Label from '../components/Label';\nimport Scrollbar from '../components/Scrollbar';\nimport SearchNotFound from '../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../components/_dashboard/user';\nimport { getAllTeamMember } from '../_mocks_/repo/data';\n\nconst TABLE_HEAD = [\n  { id: 'name', label: 'Name', alignRight: false },\n  { id: 'description', label: 'Position', alignRight: false }\n];\n\n// ----------------------------------------------------------------------\n\nexport default function Team() {\n  const [page, setPage] = useState(0);\n  const [order, setOrder] = useState('asc');\n  const [selected, setSelected] = useState([]);\n  const [orderBy, setOrderBy] = useState('name');\n  const [filterName, setFilterName] = useState('');\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [categories, setCategoy] = useState([]);\n\n  const init = () => {\n    getAllTeamMember().then((data) => {\n      console.log(data.data);\n      setCategoy(data.data);\n    });\n  };\n  useEffect(() => {\n    init();\n  }, []);\n\n  const CATEGORYLIST = categories.map((_, index) => ({\n    id: categories[index].id,\n    name: categories[index].name,\n    position: categories[index].position,\n    image: categories[index].image\n  }));\n\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - CATEGORYLIST.length) : 0;\n\n  const filteredUsers = applySortFilter(CATEGORYLIST, getComparator(order, orderBy), filterName);\n\n  const isUserNotFound = filteredUsers.length === 0;\n\n  return (\n    <Page title=\"Team | BrainStrom\">\n      <Container>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n          <Typography variant=\"h4\" gutterBottom>\n            Team Member\n          </Typography>\n          <Button\n            variant=\"contained\"\n            component={RouterLink}\n            to=\"#\"\n            startIcon={<Icon icon={plusFill} />}\n          >\n            Add Team\n          </Button>\n        </Stack>\n\n        <Card>\n          <Scrollbar>\n            <TableContainer sx={{ minWidth: 800 }}>\n              <Table>\n                <UserListHead\n                  order={order}\n                  orderBy={orderBy}\n                  headLabel={TABLE_HEAD}\n                  rowCount={CATEGORYLIST.length}\n                  numSelected={selected.length}\n                />\n                <TableBody>\n                  {filteredUsers\n                    .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                    .map((row) => {\n                      const { id, name, position, image } = row;\n                      const isItemSelected = selected.indexOf(name) !== -1;\n\n                      return (\n                        <TableRow\n                          hover\n                          key={id}\n                          tabIndex={-1}\n                          role=\"checkbox\"\n                          selected={isItemSelected}\n                          aria-checked={isItemSelected}\n                          component={RouterLink}\n                          to={`/dashboard/edit-category/${id}`}\n                        >\n                          <TableCell />\n                          <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                            <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                              <Avatar alt={name} src={image} />\n                              <Typography variant=\"subtitle2\" noWrap>\n                                {name}\n                              </Typography>\n                            </Stack>\n                          </TableCell>\n                          <TableCell align=\"left\">{position}</TableCell>\n                        </TableRow>\n                      );\n                    })}\n                  {emptyRows > 0 && (\n                    <TableRow style={{ height: 53 * emptyRows }}>\n                      <TableCell colSpan={6} />\n                    </TableRow>\n                  )}\n                </TableBody>\n                {isUserNotFound && (\n                  <TableBody>\n                    <TableRow>\n                      <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                        <SearchNotFound searchQuery={filterName} />\n                      </TableCell>\n                    </TableRow>\n                  </TableBody>\n                )}\n              </Table>\n            </TableContainer>\n          </Scrollbar>\n        </Card>\n      </Container>\n    </Page>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}