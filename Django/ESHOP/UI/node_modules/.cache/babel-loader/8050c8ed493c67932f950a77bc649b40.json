{"ast":null,"code":"import _objectSpread from\"/home/evazs/Downloads/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/home/evazs/Downloads/material-kit-react-main/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";var _excluded=[\"task\",\"checked\",\"formik\"];import{Form,FormikProvider,useFormik}from'formik';// material\nimport{Box,Card,Checkbox,CardHeader,Typography,FormControlLabel,Stack}from'@mui/material';// ----------------------------------------------------------------------\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TASKS=['Create FireStone Logo','Add SCSS and JS files if required','Stakeholder Meeting','Scoping & Estimations','Sprint Showcase'];// ----------------------------------------------------------------------\nfunction TaskItem(_ref){var task=_ref.task,checked=_ref.checked,formik=_ref.formik,other=_objectWithoutProperties(_ref,_excluded);var getFieldProps=formik.getFieldProps;return/*#__PURE__*/_jsx(Stack,{direction:\"row\",justifyContent:\"space-between\",sx:{py:0.75},children:/*#__PURE__*/_jsx(FormControlLabel,{control:/*#__PURE__*/_jsx(Checkbox,_objectSpread(_objectSpread({},getFieldProps('checked')),{},{value:task,checked:checked},other)),label:/*#__PURE__*/_jsx(Typography,{variant:\"body2\",sx:_objectSpread({},checked&&{color:'text.disabled',textDecoration:'line-through'}),children:task})})});}export default function AppTasks(){var formik=useFormik({initialValues:{checked:[TASKS[2]]},onSubmit:function onSubmit(values){console.log(values);}});var values=formik.values,handleSubmit=formik.handleSubmit;return/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsx(CardHeader,{title:\"Tasks\"}),/*#__PURE__*/_jsx(Box,{sx:{px:3,py:1},children:/*#__PURE__*/_jsx(FormikProvider,{value:formik,children:/*#__PURE__*/_jsx(Form,{autoComplete:\"off\",noValidate:true,onSubmit:handleSubmit,children:TASKS.map(function(task){return/*#__PURE__*/_jsx(TaskItem,{task:task,formik:formik,checked:values.checked.includes(task)},task);})})})})]});}","map":{"version":3,"sources":["/home/evazs/Downloads/material-kit-react-main/src/components/_dashboard/app/AppTasks.js"],"names":["Form","FormikProvider","useFormik","Box","Card","Checkbox","CardHeader","Typography","FormControlLabel","Stack","TASKS","TaskItem","task","checked","formik","other","getFieldProps","py","color","textDecoration","AppTasks","initialValues","onSubmit","values","console","log","handleSubmit","px","map","includes"],"mappings":"qYACA,OAASA,IAAT,CAAeC,cAAf,CAA+BC,SAA/B,KAAgD,QAAhD,CACA;AACA,OACEC,GADF,CAEEC,IAFF,CAGEC,QAHF,CAIEC,UAJF,CAKEC,UALF,CAMEC,gBANF,CAOEC,KAPF,KAQO,eARP,CAUA;wFAEA,GAAMC,CAAAA,KAAK,CAAG,CACZ,uBADY,CAEZ,mCAFY,CAGZ,qBAHY,CAIZ,uBAJY,CAKZ,iBALY,CAAd,CAQA;AAQA,QAASC,CAAAA,QAAT,MAAuD,IAAnCC,CAAAA,IAAmC,MAAnCA,IAAmC,CAA7BC,OAA6B,MAA7BA,OAA6B,CAApBC,MAAoB,MAApBA,MAAoB,CAATC,KAAS,0CACrD,GAAQC,CAAAA,aAAR,CAA0BF,MAA1B,CAAQE,aAAR,CAEA,mBACE,KAAC,KAAD,EAAO,SAAS,CAAC,KAAjB,CAAuB,cAAc,CAAC,eAAtC,CAAsD,EAAE,CAAE,CAAEC,EAAE,CAAE,IAAN,CAA1D,uBACE,KAAC,gBAAD,EACE,OAAO,cACL,KAAC,QAAD,gCAAcD,aAAa,CAAC,SAAD,CAA3B,MAAwC,KAAK,CAAEJ,IAA/C,CAAqD,OAAO,CAAEC,OAA9D,EAA2EE,KAA3E,EAFJ,CAIE,KAAK,cACH,KAAC,UAAD,EACE,OAAO,CAAC,OADV,CAEE,EAAE,kBACIF,OAAO,EAAI,CACbK,KAAK,CAAE,eADM,CAEbC,cAAc,CAAE,cAFH,CADf,CAFJ,UASGP,IATH,EALJ,EADF,EADF,CAsBD,CAED,cAAe,SAASQ,CAAAA,QAAT,EAAoB,CACjC,GAAMN,CAAAA,MAAM,CAAGZ,SAAS,CAAC,CACvBmB,aAAa,CAAE,CACbR,OAAO,CAAE,CAACH,KAAK,CAAC,CAAD,CAAN,CADI,CADQ,CAIvBY,QAAQ,CAAE,kBAACC,MAAD,CAAY,CACpBC,OAAO,CAACC,GAAR,CAAYF,MAAZ,EACD,CANsB,CAAD,CAAxB,CASA,GAAQA,CAAAA,MAAR,CAAiCT,MAAjC,CAAQS,MAAR,CAAgBG,YAAhB,CAAiCZ,MAAjC,CAAgBY,YAAhB,CAEA,mBACE,MAAC,IAAD,yBACE,KAAC,UAAD,EAAY,KAAK,CAAC,OAAlB,EADF,cAEE,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEC,EAAE,CAAE,CAAN,CAASV,EAAE,CAAE,CAAb,CAAT,uBACE,KAAC,cAAD,EAAgB,KAAK,CAAEH,MAAvB,uBACE,KAAC,IAAD,EAAM,YAAY,CAAC,KAAnB,CAAyB,UAAU,KAAnC,CAAoC,QAAQ,CAAEY,YAA9C,UACGhB,KAAK,CAACkB,GAAN,CAAU,SAAChB,IAAD,qBACT,KAAC,QAAD,EAEE,IAAI,CAAEA,IAFR,CAGE,MAAM,CAAEE,MAHV,CAIE,OAAO,CAAES,MAAM,CAACV,OAAP,CAAegB,QAAf,CAAwBjB,IAAxB,CAJX,EACOA,IADP,CADS,EAAV,CADH,EADF,EADF,EAFF,GADF,CAmBD","sourcesContent":["import PropTypes from 'prop-types';\nimport { Form, FormikProvider, useFormik } from 'formik';\n// material\nimport {\n  Box,\n  Card,\n  Checkbox,\n  CardHeader,\n  Typography,\n  FormControlLabel,\n  Stack\n} from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nconst TASKS = [\n  'Create FireStone Logo',\n  'Add SCSS and JS files if required',\n  'Stakeholder Meeting',\n  'Scoping & Estimations',\n  'Sprint Showcase'\n];\n\n// ----------------------------------------------------------------------\n\nTaskItem.propTypes = {\n  task: PropTypes.string,\n  checked: PropTypes.bool,\n  formik: PropTypes.object\n};\n\nfunction TaskItem({ task, checked, formik, ...other }) {\n  const { getFieldProps } = formik;\n\n  return (\n    <Stack direction=\"row\" justifyContent=\"space-between\" sx={{ py: 0.75 }}>\n      <FormControlLabel\n        control={\n          <Checkbox {...getFieldProps('checked')} value={task} checked={checked} {...other} />\n        }\n        label={\n          <Typography\n            variant=\"body2\"\n            sx={{\n              ...(checked && {\n                color: 'text.disabled',\n                textDecoration: 'line-through'\n              })\n            }}\n          >\n            {task}\n          </Typography>\n        }\n      />\n    </Stack>\n  );\n}\n\nexport default function AppTasks() {\n  const formik = useFormik({\n    initialValues: {\n      checked: [TASKS[2]]\n    },\n    onSubmit: (values) => {\n      console.log(values);\n    }\n  });\n\n  const { values, handleSubmit } = formik;\n\n  return (\n    <Card>\n      <CardHeader title=\"Tasks\" />\n      <Box sx={{ px: 3, py: 1 }}>\n        <FormikProvider value={formik}>\n          <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n            {TASKS.map((task) => (\n              <TaskItem\n                key={task}\n                task={task}\n                formik={formik}\n                checked={values.checked.includes(task)}\n              />\n            ))}\n          </Form>\n        </FormikProvider>\n      </Box>\n    </Card>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}