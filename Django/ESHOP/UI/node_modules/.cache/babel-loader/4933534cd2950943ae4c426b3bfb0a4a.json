{"ast":null,"code":"var _jsxFileName = \"/home/evazs/Documents/Projects/BrainStrom-Admin/src/pages/BookGoogleEvent.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\nimport { Container, Grid, Typography, Button, Stack, Icon } from '@mui/material';\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { Link, useNavigate } from 'react-router-dom';\n/* global gapi */\n// prettier-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BookGoogleEvent() {\n  _s();\n\n  let month = '01';\n  let auth2;\n  const [value, setValue] = React.useState('');\n  const [showTime, setShowTime] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [view, setView] = React.useState('');\n  const [time, setTime] = React.useState(0);\n  const [bookingStatus, setBookingStatus] = React.useState('');\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n    setTime(parseInt(nextView, 10));\n  };\n\n  const navigate = useNavigate();\n  const [finalDate, setFinalDate] = React.useState('');\n  const [endDate, setEndFinalDate] = React.useState('');\n\n  const dateConverter = () => {\n    const cDate = value.toString();\n    const myDate = cDate.split(' ');\n\n    if (myDate[1] === 'Jan') {\n      month = '01';\n    }\n\n    if (myDate[1] === 'Feb') {\n      month = '02';\n    }\n\n    if (myDate[1] === 'Mar') {\n      month = '03';\n    }\n\n    if (myDate[1] === 'April') {\n      month = '04';\n    }\n\n    if (myDate[1] === 'May') {\n      month = '05';\n    }\n\n    if (myDate[1] === 'Jun') {\n      month = '06';\n    }\n\n    if (myDate[1] === 'Jul') {\n      month = '07';\n    }\n\n    if (myDate[1] === 'Aug') {\n      month = '08';\n    }\n\n    if (myDate[1] === 'Sep') {\n      month = '09';\n    }\n\n    if (myDate[1] === 'Oct') {\n      month = '10';\n    }\n\n    if (myDate[1] === 'Nov') {\n      month = '11';\n    }\n\n    if (myDate[1] === 'Dec') {\n      month = '12';\n    }\n\n    const theDate = `${myDate[3]}-${month}-${myDate[2]}T${time}:00:00+05:45`;\n    const endingDate = `${myDate[3]}-${month}-${myDate[2]}T${time + 1}:00:00+05:45`;\n    setFinalDate(theDate);\n    setEndFinalDate(endingDate);\n    return {\n      'start': theDate,\n      'final': endingDate\n    };\n  };\n\n  const CLIENT_ID = '927832324416-9t64nstt3omba55i2rh1ds5lc2r3ba9m.apps.googleusercontent.com';\n  const API_KEY = 'AIzaSyAyrE8iaEIFNlVsqsLvwRKFeiPf1Yh7tFU';\n  const DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\n  const SCOPES = 'https://www.googleapis.com/auth/calendar';\n\n  const bookevent = () => {\n    const dates = dateConverter();\n    gapi.load('client:auth2', () => {\n      auth2 = gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n      gapi.client.load('calendar', 'v3', () => console.log('DONE'));\n      gapi.auth2.getAuthInstance().signIn().then(() => {\n        const signinUser = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail();\n        console.log(signinUser);\n        const event = {\n          \"summary\": \"Brainstorm Consulation\",\n          \"description\": \"A chance to hear more about our services\",\n          \"start\": {\n            \"dateTime\": dates.start\n          },\n          \"end\": {\n            \"dateTime\": dates.final\n          },\n          \"attendees\": [{\n            \"email\": `${signinUser}`\n          }, {\n            \"email\": \"mailtokanchanbhatta@gmail.com\"\n          }]\n        };\n        const request = gapi.client.calendar.events.insert({\n          calendarId: 'primary',\n          sendNotifications: true,\n          resource: event\n        });\n        clearEvent();\n        request.execute(event => {\n          if (event.id !== null) {\n            setBookingStatus(\"Success\");\n            window.open(event.htmlLink);\n          } else {\n            setBookingStatus(\"Fail\");\n          }\n        });\n      });\n    });\n  };\n\n  const clearEvent = () => {\n    setTime(0);\n    setValue(0);\n    navigate('/dashboard/success', {\n      replace: true\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: bookingStatus === \"Fail\" ? /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        mt: 15,\n        mb: 2,\n        variant: \"h2\",\n        children: \"Unable to make booking! Please try again!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: time !== 0 ? /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          mt: 15,\n          mb: 2,\n          variant: \"h6\",\n          children: \"You choose to Book your meet on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          mb: 2,\n          children: [value.toString().slice(4, 15), \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \" from \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 40\n          }, this), \" \", time, \":00  \", /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \" to \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 65\n          }, this), \" \", time + 1, \":00\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          mb: 2,\n          children: \"Make sure you allow or tick [See, edit, share, and permanently delete all the calendars you can access using Google Calendar.]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          direction: \"row\",\n          mb: 5,\n          spacing: 4,\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            onClick: bookevent,\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"add\",\n              size: 15,\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 19\n            }, this),\n            children: \"Yes, I Confirm!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            color: \"warning\",\n            onClick: clearEvent,\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"add\",\n              size: 15,\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 19\n            }, this),\n            children: \"Cancel, I will retry!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mb: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 8,\n          md: 12,\n          lg: 8,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(StaticDatePicker, {\n              disablePast: true,\n              orientation: \"landscape\",\n              openTo: \"day\",\n              value: value,\n              onChange: newValue => {\n                setValue(newValue);\n                setShowTime(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 9\n        }, this), showTime ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          md: 12,\n          lg: 4,\n          sm: 12,\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n            orientation: \"vertical\",\n            value: view,\n            color: \"primary\",\n            size: \"large\",\n            exclusive: true,\n            fullWidth: true,\n            onChange: handleChange,\n            children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"10\",\n              children: \"10 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"11\",\n              children: \"11 AM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"12\",\n              children: \"12 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"13\",\n              children: \"1 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"14\",\n              children: \"2 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"15\",\n              children: \"3 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"16\",\n              children: \"4 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n              value: \"17\",\n              children: \"5 PM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BookGoogleEvent, \"WQulUb/hRMrSwiIdYGuLzp0fQaw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = BookGoogleEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookGoogleEvent\");","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom-Admin/src/pages/BookGoogleEvent.js"],"names":["React","AdapterDateFns","LocalizationProvider","StaticDatePicker","Container","Grid","Typography","Button","Stack","Icon","ToggleButton","ToggleButtonGroup","Link","useNavigate","BookGoogleEvent","month","auth2","value","setValue","useState","showTime","setShowTime","loading","setLoading","view","setView","time","setTime","bookingStatus","setBookingStatus","handleChange","event","nextView","parseInt","navigate","finalDate","setFinalDate","endDate","setEndFinalDate","dateConverter","cDate","toString","myDate","split","theDate","endingDate","CLIENT_ID","API_KEY","DISCOVERY_DOCS","SCOPES","bookevent","dates","gapi","load","client","init","apiKey","clientId","discoveryDocs","scope","console","log","getAuthInstance","signIn","then","signinUser","currentUser","get","getBasicProfile","getEmail","start","final","request","calendar","events","insert","calendarId","sendNotifications","resource","clearEvent","execute","id","window","open","htmlLink","replace","slice","newValue"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport StaticDatePicker from '@mui/lab/StaticDatePicker';\nimport { Container, Grid, Typography, Button, Stack, Icon } from '@mui/material';\n\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\nimport { Link, useNavigate } from 'react-router-dom';\n\n/* global gapi */\n// prettier-ignore\n\nexport default function BookGoogleEvent() {\n  let month = '01';\n  let auth2;\n\n  const [value, setValue] = React.useState('');\n  const [showTime, setShowTime] = React.useState(false);\n\n  const [loading, setLoading] = React.useState(false);\n\n  const [view, setView] = React.useState('');\n  const [time, setTime] = React.useState(0);\n\n  const [bookingStatus, setBookingStatus] = React.useState('');\n\n  const handleChange = (event, nextView) => {\n    setView(nextView);\n    setTime(parseInt(nextView, 10));\n  };\n\n  const navigate = useNavigate();\n\n  const [finalDate, setFinalDate] = React.useState('');\n  const [endDate, setEndFinalDate] = React.useState('');\n\n  const dateConverter = () => {\n    const cDate = value.toString();\n    const myDate = cDate.split(' ');\n    if (myDate[1] === 'Jan') {\n      month = '01';\n    }\n    if (myDate[1] === 'Feb') {\n      month = '02';\n    }\n    if (myDate[1] === 'Mar') {\n      month = '03';\n    }\n    if (myDate[1] === 'April') {\n      month = '04';\n    }\n    if (myDate[1] === 'May') {\n      month = '05';\n    }\n    if (myDate[1] === 'Jun') {\n      month = '06';\n    }\n    if (myDate[1] === 'Jul') {\n      month = '07';\n    }\n    if (myDate[1] === 'Aug') {\n      month = '08';\n    }\n    if (myDate[1] === 'Sep') {\n      month = '09';\n    }\n    if (myDate[1] === 'Oct') {\n      month = '10';\n    }\n    if (myDate[1] === 'Nov') {\n      month = '11';\n    }\n    if (myDate[1] === 'Dec') {\n      month = '12';\n    }\n\n    const theDate = `${myDate[3]}-${month}-${myDate[2]}T${time}:00:00+05:45`;\n    const endingDate = `${myDate[3]}-${month}-${myDate[2]}T${time+1}:00:00+05:45`;\n    setFinalDate(theDate);\n    setEndFinalDate(endingDate);\n    return {'start':theDate, 'final':endingDate};\n  };\n\n  const CLIENT_ID = '927832324416-9t64nstt3omba55i2rh1ds5lc2r3ba9m.apps.googleusercontent.com';\n  const API_KEY = 'AIzaSyAyrE8iaEIFNlVsqsLvwRKFeiPf1Yh7tFU';\n  const DISCOVERY_DOCS = ['https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest'];\n  const SCOPES = 'https://www.googleapis.com/auth/calendar';\n\n  const bookevent = () => {\n    const dates = dateConverter();\n\n    gapi.load('client:auth2', () => {\n      auth2 = gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES\n      });\n\n      gapi.client.load('calendar', 'v3', () => console.log('DONE'));\n\n      gapi.auth2\n        .getAuthInstance()\n        .signIn()\n        .then(() => {\n\n         const signinUser = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile().getEmail();\n         console.log(signinUser);\n          \n          const event = {\n            \"summary\": \"Brainstorm Consulation\",\n            \"description\": \"A chance to hear more about our services\",\n            \"start\": {\n              \"dateTime\": dates.start,\n            },\n            \"end\": {\n              \"dateTime\": dates.final,\n            },\n            \"attendees\": [\n              { \"email\":  `${signinUser}`},\n              { \"email\": \"mailtokanchanbhatta@gmail.com\" }\n            ]\n          };\n\n          const request = gapi.client.calendar.events.insert({\n            calendarId: 'primary',\n            sendNotifications: true,\n            resource: event\n          });\n\n          clearEvent();\n\n          request.execute((event) => {\n            if(event.id !== null){\n              setBookingStatus(\"Success\");\n              window.open(event.htmlLink);\n            }\n            else{\n              setBookingStatus(\"Fail\");\n            }\n          });\n        });\n    });\n  };\n\n  const clearEvent = () => {\n    setTime(0);\n    setValue(0);\n    navigate('/dashboard/success', { replace: true });\n  };\n\n  return (\n    <div>\n      {\n        bookingStatus === \"Fail\"?\n        <Container>\n        <Typography mt={15} mb={2} variant=\"h2\">\n          Unable to make booking! Please try again!\n        </Typography>\n        </Container>\n        :\n        <Container>\n    {time !== 0?(\n      <Container>\n        <Typography mt={15} mb={2} variant=\"h6\">\n          You choose to Book your meet on\n        </Typography>\n        <Typography variant=\"h4\" mb={2}>\n        {value.toString().slice(4,15)} <i> from </i> {time}:00  <i> to </i> {time+1}:00\n        </Typography>\n        <Typography mb={2}>\n        Make sure you allow or tick [See, edit, share, and permanently delete all the calendars you can access using Google Calendar.]\n        </Typography>\n        <Stack direction=\"row\" mb={5} spacing={4}>\n          <Button\n            variant=\"contained\"\n            onClick={bookevent}\n            icon={<Icon name=\"add\" size={15} color=\"white\" />}\n          >\n            Yes, I Confirm!\n          </Button>\n          <Button\n            variant=\"contained\"\n            color=\"warning\"\n            onClick={clearEvent}\n            icon={<Icon name=\"add\" size={15} color=\"white\" />}\n          >\n            Cancel, I will retry!\n          </Button>\n        </Stack>\n      </Container>\n    ):(\n      <Grid container spacing={2} mb={3}>\n        <Grid item xs={8} md={12} lg={8} sm={12}>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <StaticDatePicker\n              disablePast\n              orientation=\"landscape\"\n              openTo=\"day\"\n              value={value}\n              onChange={(newValue) => {\n                setValue(newValue);\n                setShowTime(true);\n              }}\n            />\n          </LocalizationProvider>\n        </Grid>\n        {showTime ? (\n          <Grid item xs={4} md={12} lg={4} sm={12} mt={2}>\n            <ToggleButtonGroup\n              orientation=\"vertical\"\n              value={view}\n              color=\"primary\"\n              size=\"large\"\n              exclusive\n              fullWidth\n              onChange={handleChange}\n            >\n              <ToggleButton value=\"10\">10 AM</ToggleButton>\n              <ToggleButton value=\"11\">11 AM</ToggleButton>\n              <ToggleButton value=\"12\">12 PM</ToggleButton>\n              <ToggleButton value=\"13\">1 PM</ToggleButton>\n              <ToggleButton value=\"14\">2 PM</ToggleButton>\n              <ToggleButton value=\"15\">3 PM</ToggleButton>\n              <ToggleButton value=\"16\">4 PM</ToggleButton>\n              <ToggleButton value=\"17\">5 PM</ToggleButton>\n            </ToggleButtonGroup>\n          </Grid>\n        ) : (\n          <Container />\n        )}\n      </Grid>\n    \n    )}\n    </Container>\n      }\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}