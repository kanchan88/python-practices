{"ast":null,"code":"var _jsxFileName = \"/home/evazs/Documents/Projects/BrainStrom-Admin/src/pages/AddSuccessStory.js\",\n    _s = $RefreshSig$();\n\nimport { Container, TextField, Typography, Button, Box, Modal, Icon, Grid, CardHeader } from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as React from 'react';\nimport { Card, Row, Col } from 'reactstrap';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport { getSingleMedia, apiUrl } from '../_mocks_/repo/data'; // prettier-ignore\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddSuccessStory(props) {\n  _s();\n\n  const [prodImage, setProductImage] = useState();\n  const [displayImage, setDisplayImage] = useState();\n  const [productAdded, setProductAdded] = useState(false);\n  const [mediaImages, setMediaImages] = useState([]);\n  const [product, setProduct] = useState([]);\n  const [error, setError] = useState(false);\n  const [id, setId] = useState([]);\n  const ids = useParams();\n  const [productValues, setProductValues] = useState({\n    name: '',\n    description: '',\n    image: ''\n  });\n  const [errortext, setErrorText] = useState();\n  const [uploadError, setUploadError] = React.useState(false);\n\n  const validateUserInput = () => {\n    if (productValues.name.length === 0) {\n      setUploadError(true);\n      setErrorText(\"Alt Name is required field\");\n      return false;\n    }\n\n    if (productValues.description.length === 0 == null) {\n      setUploadError(true);\n      setErrorText(\"Description is required field\");\n      return false;\n    }\n\n    if (prodImage == null) {\n      setUploadError(true);\n      setErrorText(\"Image is required field\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const [open, setEditOpen] = React.useState(false);\n\n  const handleEditOpen = () => setEditOpen(true);\n\n  const handleEditClose = () => setEditOpen(false);\n\n  const [openMedia, setMediaOpen] = React.useState(false);\n\n  const handleMediaOpen = () => setMediaOpen(true);\n\n  const handleMediaClose = () => setMediaOpen(false);\n\n  const handleImageChange = e => {\n    setProductImage(e.target.files[0]);\n    setDisplayImage(URL.createObjectURL(e.target.files[0]));\n  };\n\n  const formData = new FormData();\n  formData.append('name', productValues.name);\n  formData.append('description', productValues.description);\n\n  if (prodImage != null) {\n    formData.append('image', prodImage);\n  }\n\n  ;\n\n  const handleProductChanges = e => {\n    setProductValues({ ...productValues,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const headerFile = {\n    headers: {\n      'Content-Type': 'multipart/form-data',\n      'Authorization': `Token ${localStorage.getItem('authToken')}`\n    }\n  };\n\n  const addMedia = async () => {\n    if (validateUserInput()) {\n      await axios.post(`${apiUrl}/api/success-story`, formData, headerFile).then(response => {\n        setProductAdded(true);\n        handleEditOpen();\n      }).catch(error => {\n        setUploadError(true);\n        setErrorText(\"Something went wrong! Please try again..\");\n      });\n      console.log(formData);\n    }\n  };\n\n  const style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 500,\n    height: 200,\n    overflow: 'scroll',\n    bgcolor: 'background.paper',\n    border: '1px solid #000',\n    boxShadow: 12,\n    p: 4\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: productAdded ? /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleEditClose,\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-title\",\n          variant: \"h4\",\n          component: \"h2\",\n          children: \"Media Edited Successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          id: \"modal-modal-description\",\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            component: RouterLink,\n            to: \"/dashboard/success-story\",\n            icon: /*#__PURE__*/_jsxDEV(Icon, {\n              name: \"back\",\n              size: 15,\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this),\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        mb: 3,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(CardHeader, {\n            title: \"Upload Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Alt Name\",\n          variant: \"outlined\",\n          name: \"name\",\n          value: productValues.name,\n          onChange: handleProductChanges,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Description\",\n          multiline: true,\n          rows: 2,\n          rowsMax: 2,\n          name: \"description\",\n          value: productValues.description,\n          onChange: handleProductChanges,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: [displayImage == null ? /*#__PURE__*/_jsxDEV(\"img\", {\n          src: productValues.image,\n          alt: \"img\",\n          height: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n          src: displayImage,\n          alt: \"img\",\n          height: \"100px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          component: \"label\",\n          children: [\"Upload Images*\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            onChange: handleImageChange,\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: uploadError ? /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"p\",\n          color: \"red\",\n          children: errortext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          component: \"label\",\n          onClick: addMedia,\n          fullWidth: true,\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Add Media\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 11\n  }, this);\n}\n\n_s(AddSuccessStory, \"XF7CBeoNPT14fZvysE+hpfCuc0o=\", false, function () {\n  return [useParams];\n});\n\n_c = AddSuccessStory;\nAddSuccessStory.propTypes = {\n  location: PropTypes.object\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"AddSuccessStory\");","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom-Admin/src/pages/AddSuccessStory.js"],"names":["Container","TextField","Typography","Button","Box","Modal","Icon","Grid","CardHeader","styled","ImageList","ImageListItem","DeleteIcon","PropTypes","useState","useEffect","axios","React","Card","Row","Col","Link","RouterLink","useParams","getSingleMedia","apiUrl","AddSuccessStory","props","prodImage","setProductImage","displayImage","setDisplayImage","productAdded","setProductAdded","mediaImages","setMediaImages","product","setProduct","error","setError","id","setId","ids","productValues","setProductValues","name","description","image","errortext","setErrorText","uploadError","setUploadError","validateUserInput","length","open","setEditOpen","handleEditOpen","handleEditClose","openMedia","setMediaOpen","handleMediaOpen","handleMediaClose","handleImageChange","e","target","files","URL","createObjectURL","formData","FormData","append","handleProductChanges","value","headerFile","headers","localStorage","getItem","addMedia","post","then","response","catch","console","log","style","position","top","left","transform","width","height","overflow","bgcolor","border","boxShadow","p","mt","propTypes","location","object"],"mappings":"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","sourcesContent":["import {\n  Container,\n  TextField,\n  Typography,\n  Button,\n  Box,\n  Modal,\n  Icon,\n  Grid,\n  CardHeader\n} from '@mui/material';\nimport { styled } from '@mui/material/styles';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport PropTypes from 'prop-types';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport * as React from 'react';\nimport { Card, Row, Col } from 'reactstrap';\nimport { Link as RouterLink, useParams } from 'react-router-dom';\nimport { getSingleMedia, apiUrl } from '../_mocks_/repo/data';\n\n// prettier-ignore\n\nexport default function AddSuccessStory(props) {\n      \n      \n        const [prodImage, setProductImage] = useState();\n        const [displayImage, setDisplayImage] = useState();\n        const [productAdded, setProductAdded] = useState(false);\n        const [mediaImages, setMediaImages] = useState([]);\n      \n        const [product, setProduct] = useState([]);\n        const [error, setError] = useState(false);\n        const [id, setId] = useState([]);\n      \n        const ids = useParams();\n      \n        const [productValues, setProductValues] = useState({\n          name: '',\n          description:'',\n          image:''\n        });\n      \n        const [errortext, setErrorText] = useState();\n        const [uploadError,setUploadError]= React.useState(false);\n  \n        const validateUserInput = () => {\n          if(productValues.name.length === 0){\n            setUploadError(true);\n            setErrorText(\"Alt Name is required field\");\n            return false;\n          }\n          if(productValues.description.length === 0 == null){\n            setUploadError(true);\n            setErrorText(\"Description is required field\");\n            return false;\n          }\n          if(prodImage == null){\n            setUploadError(true);\n            setErrorText(\"Image is required field\");\n            return false;\n          }\n          return true;\n        };\n          \n        const [open, setEditOpen] = React.useState(false);\n        const handleEditOpen = () => setEditOpen(true);\n        const handleEditClose = () => setEditOpen(false);\n      \n        const [openMedia, setMediaOpen] = React.useState(false);\n        const handleMediaOpen = () => setMediaOpen(true);\n        const handleMediaClose = () => setMediaOpen(false);\n      \n        const handleImageChange = (e) => {\n          setProductImage(e.target.files[0]);\n          setDisplayImage(URL.createObjectURL(e.target.files[0]));\n        };\n      \n        const formData = new FormData();\n        formData.append('name', productValues.name);\n        formData.append('description', productValues.description);\n        if(prodImage!=null){formData.append('image', prodImage)};\n      \n      \n        const handleProductChanges = (e) => {\n          setProductValues({\n            ...productValues,\n            [e.target.name]: e.target.value\n          });\n        };\n      \n        const headerFile = {\n          headers:{\n            'Content-Type': 'multipart/form-data',\n            'Authorization': `Token ${localStorage.getItem('authToken')}`,\n            }\n          };\n      \n        const addMedia = async () => {\n          if(validateUserInput()){\n            await axios\n            .post(`${apiUrl}/api/success-story`, formData, headerFile )\n            .then((response) => {\n              setProductAdded(true);\n              handleEditOpen();\n            })\n            .catch((error) => {\n              setUploadError(true);\n              setErrorText(\"Something went wrong! Please try again..\")\n            });\n          console.log(formData);\n          }\n        };\n      \n        const style = {\n          position: 'absolute',\n          top: '50%',\n          left: '50%',\n          transform: 'translate(-50%, -50%)',\n          width: 500,\n          height: 200,\n          overflow:'scroll',\n          bgcolor: 'background.paper',\n          border: '1px solid #000',\n          boxShadow: 12,\n          p: 4,\n        };\n      \n        return (\n          <div>\n            {productAdded ? (\n              <Modal\n                open={open}\n                onClose={handleEditClose}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n              >\n                <Box sx={style}>\n                  <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\n                    Media Edited Successfully\n                  </Typography>\n                  <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>\n                    <Button\n                      variant=\"contained\"\n                      component={RouterLink}\n                      to=\"/dashboard/success-story\"\n                      icon={<Icon name=\"back\" size={15} color=\"white\" />}\n                    >\n                      Go Back\n                    </Button>\n                  </Typography>\n                </Box>\n              </Modal>\n            ) : (\n              <Container>\n                <Grid container spacing={2} mb={3}>\n                  <Grid item xs={10}>\n                    <CardHeader title=\"Upload Media\" />\n                  </Grid>\n                </Grid>\n                <Box m={2}>\n                  <TextField\n                    label=\"Alt Name\"\n                    variant=\"outlined\"\n                    name=\"name\"\n                    value={productValues.name}\n                    onChange={handleProductChanges}\n                    fullWidth\n                  />\n                </Box>\n                <Box m={2}>\n                  <TextField\n                    label=\"Description\"\n                    multiline\n                    rows={2}\n                    rowsMax={2}\n                    name=\"description\"\n                    value={productValues.description}\n                    onChange={handleProductChanges}\n                    fullWidth\n                  />\n                </Box>\n                <Box m={2}>\n                  {displayImage == null ? (\n                    <img src={productValues.image} alt=\"img\" height=\"100px\" />\n                  ) : (\n                    <img src={displayImage} alt=\"img\" height=\"100px\" />\n                  )}\n                  <Button variant=\"outlined\" component=\"label\">\n                    Upload Images*\n                    <input type=\"file\" name=\"image\" onChange={handleImageChange} hidden />\n                  </Button>\n                </Box>\n                <Box m={2}>\n                  {uploadError ? (\n                    <Typography variant=\"p\" color=\"red\">\n                      {errortext}\n                    </Typography>\n                  ) : (\n                    <Container />\n                  )}\n                </Box>\n                <Box m={2}>\n                  <Button variant=\"contained\" component=\"label\" onClick={addMedia} fullWidth>\n                    <h3>Add Media</h3>\n                  </Button>\n                </Box>\n              </Container>\n            )}\n          </div>\n        );\n      }\n\nAddSuccessStory.propTypes = {\n  location: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}