{"ast":null,"code":"import axios from 'axios';\nimport { useState } from 'react';\nimport { string } from 'prop-types';\nimport { myToken } from '../../components/authentication/login/LoginForm';\nexport const apiUrl = 'https://alphateds.com.np';\nexport const token = myToken;\nexport const getAllVisaServices = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/service`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllPages = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/page`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllBlogNews = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/blog-news`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllPartners = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/partner`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllTestimonial = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/testimonial`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllTeamMember = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/team`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllMigrationService = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/country`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getAllMedia = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/media`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleVisaSevice = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/service/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleBlog = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/blog-news/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleMedia = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/media/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleTeamMember = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/team/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleTestimonial = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/testimonial/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSinglePartner = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/partner/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getCompanyInfo = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/company-info/1`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSingleMigrationSevice = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/country/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSinglePage = async id => {\n  try {\n    return await axios.get(`${apiUrl}/api/page/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom-Admin/src/_mocks_/repo/data.js"],"names":["axios","useState","string","myToken","apiUrl","token","getAllVisaServices","get","headers","Authorization","error","console","log","getAllPages","getAllBlogNews","getAllPartners","getAllTestimonial","getAllTeamMember","getAllMigrationService","getAllMedia","getSingleVisaSevice","id","getSingleBlog","getSingleMedia","getSingleTeamMember","getSingleTestimonial","getSinglePartner","getCompanyInfo","getSingleMigrationSevice","getSinglePage"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { useState } from 'react';\nimport { string } from 'prop-types';\nimport { myToken } from '../../components/authentication/login/LoginForm';\n\nexport const apiUrl = 'https://alphateds.com.np';\nexport const token = myToken;\n\nexport const getAllVisaServices = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/service`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllPages = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/page`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllBlogNews = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/blog-news`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllPartners = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/partner`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllTestimonial = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/testimonial`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllTeamMember = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/team`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllMigrationService = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/country`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getAllMedia = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/media`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSingleVisaSevice = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/service/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSingleBlog = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/blog-news/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSingleMedia = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/media/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSingleTeamMember = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/team/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSingleTestimonial = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/testimonial/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSinglePartner = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/partner/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCompanyInfo = async () => {\n  try {\n    return await axios.get(`${apiUrl}/api/company-info/1`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSingleMigrationSevice = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/country/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSinglePage = async (id) => {\n  try {\n    return await axios.get(`${apiUrl}/api/page/${id}`, {\n      headers: {\n        Authorization: `Token ${token}`\n      }\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}