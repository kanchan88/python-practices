{"ast":null,"code":"var _jsxFileName = \"/home/evazs/Documents/Projects/BrainStrom-Admin/src/components/authentication/login/LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport axios from 'axios'; // material\n\nimport { Link, Stack, Checkbox, TextField, IconButton, InputAdornment, FormControlLabel, Container, Typography } from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LoginForm() {\n  _s();\n\n  const navigate = useNavigate();\n  const [logins, setUserLogins] = useState({\n    username: '',\n    password: ''\n  });\n  const [isLogged, setIsLogged] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n  const formData = new FormData();\n  formData.append('username', logins.username);\n  formData.append('password', logins.password);\n  const headerFile = {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  };\n\n  const handleLogin = async () => {\n    console.log(formData);\n    await axios.post(`http://127.0.0.1:8000/api/login/`, headerFile, formData).then(response => {\n      if (response.data.token != null) {\n        localStorage.setItem('isLoggedIn', true);\n        console.log('YOU ARE LOGGED IN');\n        navigate('/dashboard', {\n          replace: true\n        });\n      } else {\n        setLoginError(true);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const handleValueChanges = e => {\n    setUserLogins({ ...logins,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 3,\n      mb: 5,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Username\",\n        name: \"username\",\n        variant: \"outlined\",\n        value: logins.username,\n        onChange: handleValueChanges,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        name: \"password\",\n        variant: \"outlined\",\n        type: \"password\",\n        value: logins.password,\n        onChange: handleValueChanges,\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), loginError ? /*#__PURE__*/_jsxDEV(Typography, {\n      color: \"red\",\n      children: \"Login Credentials Unavailable...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Container, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      fullWidth: true,\n      size: \"large\",\n      type: \"submit\",\n      variant: \"contained\",\n      onClick: handleLogin,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginForm, \"+/6ppIElsP6wOnPYe5aj5M8cDh4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["/home/evazs/Documents/Projects/BrainStrom-Admin/src/components/authentication/login/LoginForm.js"],"names":["Yup","useState","Link","RouterLink","useNavigate","useFormik","Form","FormikProvider","Icon","eyeFill","eyeOffFill","axios","Stack","Checkbox","TextField","IconButton","InputAdornment","FormControlLabel","Container","Typography","LoadingButton","LoginForm","navigate","logins","setUserLogins","username","password","isLogged","setIsLogged","loginError","setLoginError","formData","FormData","append","headerFile","headers","handleLogin","console","log","post","then","response","data","token","localStorage","setItem","replace","catch","error","handleValueChanges","e","target","name","value"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport axios from 'axios';\n\n// material\nimport {\n  Link,\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel,\n  Container,\n  Typography\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\nexport default function LoginForm() {\n  const navigate = useNavigate();\n\n  const [logins, setUserLogins] = useState({\n    username: '',\n    password: ''\n  });\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [loginError, setLoginError] = useState(false);\n\n  const formData = new FormData();\n  formData.append('username', logins.username);\n  formData.append('password', logins.password);\n\n  const headerFile = {\n    headers:{\n      'Content-Type': 'multipart/form-data',\n      }\n    };\n\n  const handleLogin = async () => {\n    console.log(formData);\n    await axios\n      .post(`http://127.0.0.1:8000/api/login/`, headerFile, formData)\n      .then((response) => {\n        if (response.data.token != null) {\n          localStorage.setItem('isLoggedIn', true);\n          console.log('YOU ARE LOGGED IN');\n          navigate('/dashboard', { replace: true });\n        } else {\n          setLoginError(true);\n        }\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleValueChanges = (e) => {\n    setUserLogins({\n      ...logins,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  return (\n    <Container>\n      <Stack spacing={3} mb={5}>\n        <TextField\n          label=\"Username\"\n          name=\"username\"\n          variant=\"outlined\"\n          value={logins.username}\n          onChange={handleValueChanges}\n          fullWidth\n        />\n\n        <TextField\n          label=\"Password\"\n          name=\"password\"\n          variant=\"outlined\"\n          type=\"password\"\n          value={logins.password}\n          onChange={handleValueChanges}\n          fullWidth\n        />\n      </Stack>\n\n      {loginError ? (\n        <Typography color=\"red\">Login Credentials Unavailable...</Typography>\n      ) : (\n        <Container />\n      )}\n      <LoadingButton fullWidth size=\"large\" type=\"submit\" variant=\"contained\" onClick={handleLogin}>\n        Login\n      </LoadingButton>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}